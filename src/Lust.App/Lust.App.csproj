<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <!-- <MvcRazorCompileOnPublish>false</MvcRazorCompileOnPublish> -->
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <LangVersion>latest</LangVersion>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>aspnetcorespa-c23d27a4-eb88-4b18-9b77-2a93f3b15119</UserSecretsId>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="7.0.0-alpha-0001" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="AspNet.Security.OAuth.Amazon" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.StackExchange" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.Yahoo" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.Paypal" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.LinkedIn" Version="2.0.0-rc2-final" />
    <PackageReference Include="AspNet.Security.OAuth.Validation" Version="2.0.0-rc2-final" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.0.0-rc1-final" />
    
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.0-rc1-final" />
    
    <PackageReference Include="OpenIddict" Version="2.0.0-rc2-final" />
    <PackageReference Include="OpenIddict.EntityFrameworkCore" Version="2.0.0-rc2-final" />
    <PackageReference Include="OpenIddict.Mvc" Version="2.0.0-rc2-final" />
    <PackageReference Include="NetEscapades.AspNetCore.SecurityHeaders" Version="0.7.0" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />

    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.0-rc1-final" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.0-rc1-final" PrivateAssets="All" />

  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.DotNet.Watcher.Tools" Version="1.0.0" />
    <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.0" />
    <DotNetCliToolReference Include="Microsoft.Extensions.SecretManager.Tools" Version="2.0.0" />
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\bpk\**" />
    <Compile Remove="ClientApp\src\app\core\NewFolder\**" />
    <Compile Remove="ClientApp\src\app\core\services\NewFolder\**" />
    <Compile Remove="ClientApp\src\app\planos\desfruta\**" />
    <Compile Remove="ClientApp\src\app\planos\oferece\**" />
    <Compile Remove="Server\Repositories\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\bpk\**" />
    <Content Remove="ClientApp\src\app\core\NewFolder\**" />
    <Content Remove="ClientApp\src\app\core\services\NewFolder\**" />
    <Content Remove="ClientApp\src\app\planos\desfruta\**" />
    <Content Remove="ClientApp\src\app\planos\oferece\**" />
    <Content Remove="Server\Repositories\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\bpk\**" />
    <EmbeddedResource Remove="ClientApp\src\app\core\NewFolder\**" />
    <EmbeddedResource Remove="ClientApp\src\app\core\services\NewFolder\**" />
    <EmbeddedResource Remove="ClientApp\src\app\planos\desfruta\**" />
    <EmbeddedResource Remove="ClientApp\src\app\planos\oferece\**" />
    <EmbeddedResource Remove="Server\Repositories\**" />
    <None Remove="ClientApp\bpk\**" />
    <None Remove="ClientApp\src\app\core\NewFolder\**" />
    <None Remove="ClientApp\src\app\core\services\NewFolder\**" />
    <None Remove="ClientApp\src\app\planos\desfruta\**" />
    <None Remove="ClientApp\src\app\planos\oferece\**" />
    <None Remove="Server\Repositories\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Server\Entities\ApplicaitonUserPhoto.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove=".gitignore" />
    <None Remove="deploy.azure.ps1" />
    <None Remove="deploy.heroku.ps1" />
    <None Remove="Dockerfile" />
    <None Remove="LICENSE" />
    <None Remove="README.md" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Lust.Domain.Core\Lust.Domain.Core.csproj" />
    <ProjectReference Include="..\Lust.Domain\Lust.Domain.csproj" />
    <ProjectReference Include="..\Lust.Infra.CrossCutting.AspNetFilters\Lust.Infra.CrossCutting.AspNetFilters.csproj" />
    
    <ProjectReference Include="..\Lust.Infra.CrossCutting.AspNetHelper\Lust.Infra.CrossCutting.AspNetHelper.csproj" />
    <ProjectReference Include="..\Lust.Infra.CrossCutting.Identity\Lust.Infra.CrossCutting.Identity.csproj" />
    <ProjectReference Include="..\Lust.Infra.Data\Lust.Infra.Data.csproj" />
    <ProjectReference Include="..\Lust.Infra.Files\Lust.Infra.Files.csproj" />
    
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\desfrutar\classes\" />
    <Folder Include="ClientApp\src\app\shared\components\" />
    <Folder Include="ClientApp\src\app\shared\pipes\components\" />
    <Folder Include="ClientApp\src\assets\NewFolder\" />
    <Folder Include="ClientApp\src\app\angular-oauth2-oidc\" />
    <Folder Include="Server\Entities\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**;Dockerfile;.\extra\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
